$LOAD_PATH.unshift('../lib')
require 'config'

require 'berkshelf/vagrant'

Vagrant::Config.run do |config|
  # config.berkshelf.berksfile_path = "./Berksfile"
  # config.berkshelf.only = []
  # config.berkshelf.except = []


  config.vm.host_name = "chef-11"

  config.vm.box     = Environment::Config[:base_box]
  config.vm.box_url = Environment::Config[:base_box_url]
  config.vm.network :hostonly, Environment::Config[:chef_11_ip_addr]

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      'chef-server' =>
      {
        # Chef 11 uses api_fqdn to craft URL responses in some endpoints
        api_fqdn: Environment::Config[:chef_11_ip_addr],
        package_file: '/tmp/build_cache/chef-server_11.0.0-alpha.3+20130116014017.git.28.89d6514-1.ubuntu.10.04_amd64.deb',
        #package_file: 'https://opscode-omnitruck-release.s3.amazonaws.com/ubuntu/10.04/x86_64/chef-server_11.0.0-alpha.3+20130124075141.git.37.d143b92-1.ubuntu.10.04_amd64.deb'

        # Set bookshelf VIP so that cookbook uploads will work
        configuration: { bookshelf: { vip: Environment::Config[:chef_11_ip_addr] } }
      },
      setup: {
        chef_server_version: 'chef-11'
      }
    }

    chef.run_list = [ "chef-server", "setup::knife" ]
  end

  # Share an additional folder to the guest VM. The first argument is
  # an identifier, the second is the path on the guest to mount the
  # folder, and the third is the path on the host to the actual folder.
  config.vm.share_folder "build_cache", "/tmp/build_cache", "../.build_cache/"

  config.ssh.max_tries = 40
  config.ssh.timeout   = 120
end
